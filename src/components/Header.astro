---
import { getConfigurationCollection } from "../lib/utils";
import Anchor from "./common/Anchor.astro";
import ThemeToggle from "./ThemeToggle.astro";

const { data: config } = await getConfigurationCollection();
---

<header class="zag-bg header-sticky zag-transition sticky top-0 z-50 w-full">
  <div
    class="zag-bg zag-transition relative z-50 flex items-center py-4 sm:hidden"
  >
    <button id="mobileNavBtn" class="px-4" aria-label="Toggle navigation menu">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="32"
        height="32"
        fill="currentColor"
        viewBox="0 0 512 512"
        class="zag-fill zag-transition"
      >
        <path d="M80 96h352v32H80zm0 144h352v32H80zm0 144h352v32H80z"></path>
      </svg>
    </button>
  </div>
  <nav
    id="siteNav"
    class="zag-bg zag-transition fixed inset-x-0 top-0 mx-auto flex h-auto w-auto max-w-2xl flex-col justify-items-stretch gap-8 py-4 text-xl sm:relative sm:flex-row sm:border-none sm:px-4 sm:pt-4"
  >
    <div
      class="mt-16 flex flex-col gap-4 px-4 font-mono font-medium sm:mt-0 sm:mr-auto sm:flex-row sm:px-0"
    >
      {
        Object.entries(config.menu).map((i) => (
          <Anchor class="has-text-scramble" url={i[1]}>
            {i[0]}
          </Anchor>
        ))
      }
    </div>
    <div class="flex justify-around gap-4 px-4 sm:px-0">
      {
        config.personal.githubProfile && (
          <Anchor
            url={config.personal.githubProfile}
            aria-label={`${config.personal.name} GitHub Profile`}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="32"
              height="32"
              viewBox="0 0 24 24"
              fill="currentColor"
              class="zag-fill zag-transition"
            >
              <path d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2" />
            </svg>
          </Anchor>
        )
      }
      <ThemeToggle />
    </div>
  </nav>
</header>

<script>
  let button, nav;
  let isOpen = false;

  function initNavToggle() {
    button = document.getElementById("mobileNavBtn");
    nav = document.getElementById("siteNav");
    // Remove any old listener, then bind afresh
    button.removeEventListener("click", toggleNav);
    button.addEventListener("click", toggleNav);
  }

  function updateNavState() {
    const isMobile = window.matchMedia("(max-width: 640px)").matches;
    if (isMobile) {
      nav.style.transform = isOpen ? "translateY(0)" : "translateY(-100%)";
    } else {
      nav.style.transform = "translateY(0)";
      isOpen = false;
    }
  }

  function toggleNav() {
    isOpen = !isOpen;
    updateNavState();
  }

  // Bind on first load
  initNavToggle();
  updateNavState();

  // Reâ€‘init (and close) on every Astro navigation
  document.addEventListener("astro:page-load", () => {
    isOpen = false;
    initNavToggle();
    updateNavState();
  });
  document.addEventListener("astro:after-swap", () => {
    isOpen = false;
    initNavToggle();
    updateNavState();
  });

  // Keep nav state correct on viewport resize
  window.addEventListener("resize", updateNavState);
</script>
